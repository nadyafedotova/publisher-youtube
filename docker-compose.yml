services:

  nginx:
    container_name: ${PROJECT_NAME}_nginx
    image: nginx
    volumes:
      - ./etc/nginx/${ENV}/:/etc/nginx/templates/
      - ${NGINX_SSL}:/etc/ssl
      - ./${PROJECT_DIR}/:/var/www/app/
    ports:
      - ${NGINX_HTTP}:80
      - ${NGINX_HTTPS}:443
    environment:
      - NGINX_HTTP=${NGINX_HTTP}
      - NGINX_HTTPS=${NGINX_HTTPS}
      - NGINX_HOST=${NGINX_HOST}
    depends_on:
      - php
      - postgres
    restart: always
    networks:
      app:
        ipv4_address: ${NGINX_IP}

  php:
    container_name: ${PROJECT_NAME}_php
    build:
      context: etc/php/${ENV}
      args:
        ENABLE_DEBUG: ${ENABLE_DEBUG}
        XDEBUG_CLIENT_HOST: ${XDEBUG_CLIENT_HOST}
        XDEBUG_CLIENT_PORT: ${XDEBUG_CLIENT_PORT}
        XDEBUG_IDE_KEY: ${XDEBUG_IDE_KEY}
    restart: always
    ports:
      - ${WEBPACK_DEV_PORT}:${WEBPACK_DEV_PORT}
      - ${XDEBUG_CLIENT_PORT}:${XDEBUG_CLIENT_PORT}
    volumes:
      - ./etc/php/${ENV}/php.ini:/usr/local/etc/php/conf.d/php.ini
      - ./${PROJECT_DIR}:/var/www/app
    depends_on:
      - postgres
    networks:
      app:
        ipv4_address: ${PHP_IP}

  postgres:
    container_name: ${PROJECT_NAME}_postgres
    image: postgres:${POSTGRES_VERSION}
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DATABASE}
      POSTGRES_USER: ${POSTGRES_ROOT_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./data/db/postgresql:/var/lib/postgresql/data
      - ./log/postgres:/var/log/postgres
    ports:
      - ${POSTGRES_PORT}:5432
    networks:
      app:
        ipv4_address: ${POSTGRES_IP}

  postgres-test:
    container_name: ${PROJECT_NAME}_postgres_test
    image: postgres:${POSTGRES_VERSION}
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DATABASE}_test
      POSTGRES_USER: ${POSTGRES_ROOT_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./data/db/postgresql_test:/var/lib/postgresql/data
      - ./log/postgres_test:/var/log/postgres
    ports:
      - ${POSTGRES_PORT2}:5432
    networks:
      app:
        ipv4_address: ${POSTGRES_IP2}

  hoverfly:
    container_name: hoverfly
    image: spectolabs/hoverfly:${HOVERFLY_VERSION}
    command:
      - -webserver
      - -response-body-files-path=/hoverfly_app/responses
      - -import=/hoverfly_app/simulations/recommend.simulation.json
    volumes:
      - ./app/hoverfly:/hoverfly_app:ro
    ports:
      - ${HOVERFLY_PORT}:8500
    networks:
      app:
        ipv4_address: ${HOVERFLY_IP}

networks:
  app:
    driver: bridge
    ipam:
      config:
        - subnet: ${NETWORK_SUBNET}
